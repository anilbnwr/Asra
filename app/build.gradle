apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.asra.mobileapp"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode getAppVersionCode()
        versionName getAppVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {

        signingConfigs {
            release {
                storeFile file("../document/keystore/release.keystore")
                storePassword "elvisham"
                keyAlias "evolve-gt"
                keyPassword "elvisham"
            }
            debug {

                storeFile file("../document/keystore/debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildTypes {
        release {

            minifyEnabled false
            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "asra-${variant.name}-${variant.versionName}.apk"
                }
            }

        }
        debug {
            signingConfig signingConfigs.debug

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "asra-${variant.name}-${variant.versionName}.apk"
                }
            }

        }

    }

    dataBinding {
        enabled = true
    }

    flavorDimensions "distribution"
    productFlavors {
        playstore {
            dimension "distribution"
            resValue "string", "app_name", "ASRA/CCS"
            buildConfigField('boolean', 'TIMBER_LOG_ENABLED', 'false')
            buildConfigField('String', 'CHECKOUT_MODE', '"production"')
            buildConfigField('String', 'BASE_URL', '"https://race.asraracing.com/evolve-api/public/app/v3/"')
        }

        uat {
            dimension "distribution"
            resValue "string", "app_name", "ASRA/CCS"
            applicationIdSuffix ".uat"
            buildConfigField('boolean', 'TIMBER_LOG_ENABLED', 'true')
            buildConfigField('String', 'CHECKOUT_MODE', '"sandbox"')
//            buildConfigField('String', 'BASE_URL', '"https://qa.evolvegt.com/"')
            buildConfigField('String', 'BASE_URL', '"https://race.asraracing.com/evolve-api/public/app/v3/"')
        }
        dev{
            dimension "distribution"
            resValue "string", "app_name", "ASRA/CCS"
            applicationIdSuffix ".qa"
            buildConfigField('boolean', 'TIMBER_LOG_ENABLED', 'true')
            buildConfigField('String', 'CHECKOUT_MODE', '"sandbox"')
            buildConfigField('String', 'BASE_URL', '"https://race.asraracing.com/evolve-api/public/app/v3/"')
        }

      //  https://qa-race.asraracing.com/ev-angular-api/public/admin/deletemember
    //    https://qa-race.asraracing.com/
    }

    lintOptions {
        abortOnError false
    }

}



dependencies {

    implementation 'androidx.test.ext:junit:1.1.5'
    final DAGGER_VERSION = '2.27'
    def lifecycle__testing_version = "2.1.0"
    def lifecycle_version = "2.2.0"
    def room_version = "2.2.5"
    def appcompat_version = "1.1.0"
    def rxJavaVersion = '2.0.1'
    def viewpager2 = '1.0.0'
    def okHttpVersion = '4.9.1'


    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:1.4.1"
    implementation('androidx.annotation:annotation:1.3.0')

    // For loading and tinting drawables on older versions of the platform
    implementation "androidx.appcompat:appcompat-resources:1.4.1"

    implementation "androidx.viewpager2:viewpager2:$viewpager2"

    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.4.0"
    testImplementation "androidx.arch.core:core-testing:$lifecycle__testing_version"

    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"

    implementation "com.google.dagger:dagger:2.28.3"
    implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    //circular image view
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    implementation 'com.mikhaellopez:circularimageview:4.3.0'


    implementation "com.google.android.material:material:1.5.0"


    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"
    implementation("com.squareup.okhttp3:okhttp:4.9.3")
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.0'

    //timber
    api 'com.jakewharton.timber:timber:4.7.1'

    //Material Toast
    implementation 'com.github.marcoscgdev:MaterialToast:1.0.1'

    //fragment management
    implementation 'com.ncapdevi:frag-nav:3.2.0'
    //Room
    implementation "androidx.room:room-runtime:2.4.1"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:2.4.1"
    testImplementation "androidx.room:room-testing:2.4.1"

    //glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    //implementation files('libs/expandablecardview-debug.aar')

    implementation 'com.thoughtbot:expandablerecyclerview:1.3'

    //paypal
    implementation 'com.braintreepayments.api:braintree:3.17.0'
    implementation 'com.braintreepayments.api:drop-in:4.6.0'
    implementation 'com.braintreepayments:card-form:4.3.0'


    implementation platform('com.google.firebase:firebase-bom:28.2.1')
    implementation 'com.google.firebase:firebase-functions-ktx'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-config'

    implementation 'com.google.android.gms:play-services-measurement-api:20.0.2'

    //signature pad
    implementation 'com.github.gcacace:signature-pad:1.2.1'


    implementation 'com.github.bumptech.glide:okhttp3-integration:4.3.1'


    //Image Picker
    implementation 'io.github.ParkSangGwon:tedimagepicker:1.2.7'


    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

def getAppVersionCode(){
    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
    }
    def versionMajor = versionProps['VersionMajor'].toInteger()
    def versionMinor = versionProps['VersionMinor'].toInteger()
    def versionPatch = versionProps['VersionPatch'].toInteger()

    def code =  versionMajor * 100000 + versionMinor * 100  + versionPatch
  //  def code =  2

    return code
}

def getAppVersionName(){
    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
    }
    def versionMajor = versionProps['VersionMajor'].toInteger()
    def versionMinor = versionProps['VersionMinor'].toInteger()
    def versionPatch = versionProps['VersionPatch'].toInteger()

    return "${versionMajor}.${versionMinor}.${versionPatch}"
}